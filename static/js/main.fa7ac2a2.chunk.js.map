{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","NO_KEY_PRESSED","document","addEventListener","event","setState","key","removeEventListener","className","this","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAKaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAKUC,eAAiB,0BAL3B,uDAOE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEL,WAAYI,EAAME,WATxC,kCAaE,WAA8B,IAAD,OAC3BJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CAAEL,WAAYI,EAAME,WAfxC,oBAmBE,WACE,OACE,qBAAKE,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGC,KAAKV,MAAMC,WAAX,mCAC+BS,KAAKV,MAAMC,WAD1C,KAEGS,KAAKR,uBAzBnB,GAAyBS,IAAMC,W,MCA/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.fa7ac2a2.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string,\n};\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    pressedKey: '',\n  };\n\n  private NO_KEY_PRESSED = 'Nothing was pressed yet';\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey\n            ? `The last pressed key is [${this.state.pressedKey}]`\n            : this.NO_KEY_PRESSED}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}